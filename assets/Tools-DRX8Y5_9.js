import{_ as R,d as N,r as y,e as C,f as U,o as g,c as h,a as e,y as W,z as $,t as a,v as S,g as k,F as _,b as F,i as T,N as Q,j as M}from"./index-BlHAnnPc.js";const q=N({name:"WeaponCost",setup(){const t=y([]),n=y(""),L=y(1),b=y(!1),v=l=>{const s=l.split(`
`).filter(c=>c.trim()!==""),p=[];for(let c=1;c<s.length;c++){const r=s[c].split(",").map(f=>f.trim());if(r.length>=4){const f=r[1],m=Number(r[2]),w=r[3],B=Number(r[4]);f&&m&&p.push({name:f,cost:m,strength:B,type:w==="1"?"Somber Weapon":"Smithing Weapon"})}}return p},i=async()=>{try{const s=await(await fetch("/data/Wiki/Weapons Edit - Weapons.csv.csv")).text();t.value=v(s)}catch(l){console.error("Error loading CSV:",l)}},o=C(()=>{if(!n.value)return null;const l=n.value.toLowerCase();return t.value.find(s=>s.name.toLowerCase().includes(l))||null}),u=C(()=>{const l=o.value;if(!l||!l.strength)return null;const s=l.strength*2,p=s%3>0?s/3+1:s/3;return Math.floor(p)}),d=C(()=>{let l=0;const s=o.value;if(!s)return 0;const p=s.cost,c=s.type==="Somber Weapon"?.5:.2,r=Math.max(1,Math.floor(L.value));return r===10&&c==.5?l=p*(r+c*(r*(r-1)/2)+.5):l=p*(r+c*(r*(r-1)/2)),Math.round(l)}),V=C(()=>{const l=o.value;if(!l)return[];const s=l.cost,p=l.type==="Somber Weapon"?.5:.2,c=Math.max(1,Math.floor(L.value)),r=[];let f=0;for(let m=1;m<=c;m++){const w=Math.round(s*(1+(m-1)*p));m===10&&p===.5?f+=s*6:f+=w,m===10&&p===.5?r.push({level:m,cost:s*6,running:f}):r.push({level:m,cost:w,running:f})}return r});return U(i),{searchQuery:n,filteredWeapon:o,upgradeLevel:L,totalUpgradeCost:d,breakdown:V,showBreakdown:b,minimumStrength:u}}}),E={class:"weapon-cost"},I={key:0,class:"result-box"},A={key:0},D={class:"upgrade-controls"},H={for:"upgrade"},j=["max"],z={class:"total-cost"},G={class:"highlight"},J={key:1,class:"breakdown-table"},K={key:1,class:"no-result"};function O(t,n,L,b,v,i){return g(),h("div",E,[n[8]||(n[8]=e("h2",null,"⚔️ Weapon Cost Lookup",-1)),W(e("input",{"onUpdate:modelValue":n[0]||(n[0]=o=>t.searchQuery=o),type:"text",placeholder:"Search for a weapon...",class:"search-bar"},null,512),[[$,t.searchQuery]]),t.filteredWeapon?(g(),h("div",I,[e("h3",null,a(t.filteredWeapon.name),1),e("p",null,[n[3]||(n[3]=e("strong",null,"Base Cost:",-1)),S(" "+a(t.filteredWeapon.cost),1)]),e("p",null,[n[4]||(n[4]=e("strong",null,"Type:",-1)),S(" "+a(t.filteredWeapon.type),1)]),e("p",null,[n[5]||(n[5]=e("strong",null,"Strength Required:",-1)),S(" "+a(t.filteredWeapon.strength),1)]),t.minimumStrength!==null?(g(),h("p",A,[n[6]||(n[6]=e("strong",null,"Minimum (Two-Handed):",-1)),S(" "+a(t.minimumStrength),1)])):k("",!0),e("div",D,[e("label",H,[e("strong",null,"Upgrade Level: +"+a(t.upgradeLevel),1)]),W(e("input",{id:"upgrade",type:"range",min:1,max:t.filteredWeapon.type==="Somber Weapon"?10:25,"onUpdate:modelValue":n[1]||(n[1]=o=>t.upgradeLevel=o),class:"slider"},null,8,j),[[$,t.upgradeLevel,void 0,{number:!0}]])]),e("p",z,[e("strong",null,"Total Cost to +"+a(t.upgradeLevel)+": ",1),e("span",G,a(t.totalUpgradeCost.toLocaleString()),1)]),e("button",{type:"button",onClick:n[2]||(n[2]=o=>t.showBreakdown=!t.showBreakdown),class:"toggle-btn"},a(t.showBreakdown?"Hide":"Show")+" Breakdown ",1),t.showBreakdown?(g(),h("table",J,[n[7]||(n[7]=e("thead",null,[e("tr",null,[e("th",null,"Level"),e("th",null,"Cost at Level"),e("th",null,"Running Total")])],-1)),e("tbody",null,[(g(!0),h(_,null,F(t.breakdown,o=>(g(),h("tr",{key:o.level},[e("td",null,"+"+a(o.level),1),e("td",null,a(o.cost.toLocaleString()),1),e("td",null,a(o.running.toLocaleString()),1)]))),128))])])):k("",!0)])):t.searchQuery?(g(),h("div",K," ❌ No weapon found with that name. ")):k("",!0)])}const P=R(q,[["render",O],["__scopeId","data-v-8aa496ba"]]),X=N({name:"RuneLevelCalculator",setup(){const t=y(1),n=y(1),L=C(()=>{let v=0;for(let i=1;i<t.value;i++){let o=(i+81-92)*.02;o<0&&(o=0),v+=Math.floor((o+.1)*(i+81)**2+1)}return v}),b=C(()=>{let v=0,i=0,o=0;for(let u=1;u<t.value;u++){let d=(u+81-92)*.02;d<0&&(d=0),v+=Math.floor((d+.1)*(u+81)**2+1)}for(let u=1;u<n.value;u++){let d=(u+81-92)*.02;d<0&&(d=0),i+=Math.floor((d+.1)*(u+81)**2+1)}return o=i-v,o});return{inputLevel:t,inputToLevel:n,runeCostToSelectedLevel:L,runeCostFromLevelToSelectedLevel:b}}}),Y={class:"rune-calculator"},Z={class:"input-group"},x={class:"output"},ee={class:"input-group"},te={class:"output"};function ne(t,n,L,b,v,i){return g(),h("div",Y,[n[4]||(n[4]=e("h2",null,"Rune Level Calculator",-1)),e("div",Z,[n[2]||(n[2]=e("label",{for:"level"},"Select Level:",-1)),W(e("input",{id:"level",type:"number","onUpdate:modelValue":n[0]||(n[0]=o=>t.inputLevel=o),min:"1",max:"713"},null,512),[[$,t.inputLevel,void 0,{number:!0}]])]),e("div",x,[e("p",null,"Runes needed for Level "+a(t.inputLevel)+":",1),e("h3",null,a(t.runeCostToSelectedLevel.toLocaleString()),1)]),e("div",ee,[n[3]||(n[3]=e("label",{for:"level"},"To Level:",-1)),W(e("input",{id:"level",type:"number","onUpdate:modelValue":n[1]||(n[1]=o=>t.inputToLevel=o),min:"1",max:"713"},null,512),[[$,t.inputToLevel,void 0,{number:!0}]])]),e("div",te,[e("p",null,"Runes needed for Level "+a(t.inputToLevel)+":",1),e("h3",null,a(t.runeCostFromLevelToSelectedLevel.toLocaleString()),1)])])}const oe=R(X,[["render",ne],["__scopeId","data-v-e413453e"]]),le=N({name:"Tools",components:{Navigation:Q,WeaponWeightCalculator:P,RuneLevelCalculator:oe},mounted(){document.body.style.background="linear-gradient(90deg,rgba(79, 43, 0, 1) 0%, rgba(8, 0, 7, 1) 100%)"},beforeUnmount(){document.body.style.background="#0d1321"}}),se={class:"main-container"};function re(t,n,L,b,v,i){const o=M("Navigation"),u=M("WeaponWeightCalculator"),d=M("RuneLevelCalculator");return g(),h("div",null,[T(o),e("div",se,[T(u),T(d)])])}const ue=R(le,[["render",re],["__scopeId","data-v-5d3972c4"]]);export{ue as default};
