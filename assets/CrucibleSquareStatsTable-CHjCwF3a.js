import{d as _,r as v,f,o as u,c as i,t as c,a as t,F as h,b as w,_ as S}from"./index-DV7ALihc.js";const k=async()=>{const b="/data/crucibleSquareStats.json";try{const s=await fetch(b);if(!s.ok)throw new Error(`Failed to fetch challenge records: ${s.statusText}`);const d=await s.json();return{records:Object.entries(d).map(([o,l])=>({name:o,completed:l.Completed,appeared:l.Appeared,ratio:l.Ratio,appearance:l.Appearance}))}}catch(s){throw console.error(s),new Error("Failed to load challenge records. Please try again later.")}},F={class:"container"},g={key:0,class:"error"},x={key:1,class:"table-container"},y={class:"results-table"},A={class:"left-column"},B=_({__name:"CrucibleSquareStatsTable",setup(b){const s=v({records:[]}),d=v(null),p=v("name"),o=v("asc");f(async()=>{let n=37;try{const a=await k();s.value.records=a.records.map(e=>{const r=e.appeared>0?Number((e.completed/e.appeared*100).toFixed(0)):0,m=Number((e.appeared/n*100).toFixed(0));return{...e,ratio:r,appearance:m}}),s.value.records.sort((e,r)=>e.name.localeCompare(r.name))}catch(a){d.value=a.message}});const l=n=>{p.value===n?o.value=o.value==="asc"?"desc":"asc":(p.value=n,o.value="desc"),s.value.records.sort((a,e)=>{let r=parseFloat(a[n]),m=parseFloat(e[n]);return o.value==="asc"?r-m:m-r})},C=()=>{p.value==="name"?o.value=o.value==="asc"?"desc":"asc":(p.value="name",o.value="desc"),s.value.records.sort((n,a)=>{const e=n.name.toLowerCase(),r=a.name.toLowerCase();return o.value==="asc"?e.localeCompare(r):r.localeCompare(e)})};return(n,a)=>(u(),i("div",F,[d.value?(u(),i("div",g,c(d.value),1)):(u(),i("div",x,[t("table",y,[t("thead",null,[t("tr",null,[t("th",{onClick:C,class:"sortable"},"Square Name ⬍"),t("th",{onClick:a[0]||(a[0]=e=>l("completed")),class:"sortable"},"Completed ⬍"),t("th",{onClick:a[1]||(a[1]=e=>l("appeared")),class:"sortable"},"Appeared ⬍"),t("th",{onClick:a[2]||(a[2]=e=>l("ratio")),class:"sortable"},"Completion % ⬍"),t("th",{onClick:a[3]||(a[3]=e=>l("appearance")),class:"sortable"},"Appearance % ⬍")])]),t("tbody",null,[(u(!0),i(h,null,w(s.value.records,(e,r)=>(u(),i("tr",{key:r},[t("td",A,c(e.name),1),t("td",null,c(e.completed),1),t("td",null,c(e.appeared),1),t("td",null,c(e.ratio)+"%",1),t("td",null,c(e.appearance)+"%",1)]))),128))])])]))]))}}),N=S(B,[["__scopeId","data-v-c3ab4500"]]);export{N as C};
